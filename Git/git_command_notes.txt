git 命令相关笔记

0. 概念
在Git中，用HEAD表示当前版本
上一个版本就是HEAD^，上上一个版本就是HEAD^^
当然往上100个版本，写成HEAD~100

工作区（Working Directory）
版本库（Repository）   其中最重要的就是称为stage（或者叫index）的暂存区
自动创建的第一个分支master



1.常用命令：
git init

git add
git commit -m 'message'
git diff readme.txt
git diff HEAD -- readme.txt
git push
git push origin master
git push -u origin master

git log 
    查看历史纪录
git log --pretty=oneline 
git log --graph --pretty=oneline --abbrev-commit
git reflog 查看log 包括退回版本ID

git remote
git remote -v




2. 版本退回
2.1 没有add
	git checkout -- readme.txt
	--很重要，没有--，就变成了“切换到另一个分支”的命令

2.2 已经add 没有commit

	git reset HEAD readme.txt


2.3 已经commit 没有push
	git reset --hard HEAD^
	git reset --hard 3628164
	hard 什么意思？


2.4 已经push


3. 远程分支
HEAD ---> master
		我们创建dev分支，然后切换到dev分支：
	git checkout -b dev
		-b参数表示创建并切换 相当于
		git branch dev
		git checkout dev

		git branch
		git branch newbranchname
		git checkout newbranchname
		git branch -d newbranchname
		git branch -D newbranchname  强行删除一个分支 
		合并某分支到当前分支：
		git merge <name>
        加上--no-ff参数就可以用普通模式合并
    clone一个项目 然后切换到分支 注册
    git clone xx
    git checkout -b dev origin/dev
    git pull <remote> <branch>
    或者
	git branch --set-upstream dev origin

4.   临时存储工作现场
      git stash
      git stash list
      git pop

      一是用git stash apply恢复，但是恢复后，stash内容并不删除，你需要用git stash drop来删除； 另一种方式是用git stash pop，恢复的同时把stash内容也删了

